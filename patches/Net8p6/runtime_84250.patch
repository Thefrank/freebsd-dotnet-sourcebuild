From e58d5fc1d9796c5e473781218fd0f1dc434624b9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Szczepan=20=C4=86wikli=C5=84ski?= <sec@thinkcode.pl>
Date: Mon, 3 Apr 2023 12:21:45 +0200
Subject: [PATCH 1/3] Allow ResolveReadyToRunCompilers to be run under FreeBSD

---
 .../ResolveReadyToRunCompilers.cs               | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs b/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
index aac7b19ab7081..69e60b0b2ec48 100644
--- a/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
+++ b/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
@@ -149,6 +149,7 @@ private bool ValidateCrossgen2Support()
                 "linux-musl" => "linux",
                 "osx" => "osx",
                 "win" => "windows",
+                "freebsd" => "freebsd",
                 _ => null
             };
 
@@ -297,7 +298,7 @@ private bool GetCrossgenComponentsPaths()
                     }
                 }
             }
-            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))
+            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux) || IsFreeBSD())
             {
                 if (_targetArchitecture == Architecture.Arm || _targetArchitecture == Architecture.Arm64)
                 {
@@ -352,7 +353,7 @@ private bool GetCrossgen2ComponentsPaths(bool version5)
                 toolFileName = "crossgen2.exe";
                 v5_clrJitFileNamePattern = "clrjit-{0}.dll";
             }
-            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))
+            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux) || IsFreeBSD())
             {
                 toolFileName = "crossgen2";
                 v5_clrJitFileNamePattern = "libclrjit-{0}.so";
@@ -401,5 +402,17 @@ private static string ArchitectureToString(Architecture architecture)
                 _ => null
             };
         }
+
+#if NETCOREAPP
+        private static bool IsFreeBSD() => RuntimeInformation.IsOSPlatform(OSPlatform.FreeBSD);
+#else
+        private static readonly OSPlatform s_freebsdOSPlatform = OSPlatform.Create("FREEBSD");
+
+        private static bool IsFreeBSD()
+        {
+            return RuntimeInformation.IsOSPlatform(s_freebsdOSPlatform);
+        }
+#endif
+
     }
 }

From 6bce953a7e6ed261d4f191da200d2f9f6369fe03 Mon Sep 17 00:00:00 2001
From: Jan Kotas <jkotas@microsoft.com>
Date: Fri, 2 Jun 2023 09:33:29 -0700
Subject: [PATCH 2/3] Generalize to any Linux

---
 .../ResolveReadyToRunCompilers.cs             | 68 ++++++-------------
 1 file changed, 22 insertions(+), 46 deletions(-)

diff --git a/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs b/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
index 69e60b0b2ec48..575e94eef0e83 100644
--- a/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
+++ b/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
@@ -143,22 +143,18 @@ private bool ValidateCrossgen2Support()
 
             bool version5 = crossgen2PackVersion.Major < 6;
             bool isSupportedTarget = ExtractTargetPlatformAndArchitecture(_targetRuntimeIdentifier, out _targetPlatform, out _targetArchitecture);
-            string targetOS = _targetPlatform switch
-            {
-                "linux" => "linux",
-                "linux-musl" => "linux",
-                "osx" => "osx",
-                "win" => "windows",
-                "freebsd" => "freebsd",
-                _ => null
-            };
+
+            // Normalize target OS for crossgen invocation
+            string targetOS = (_targetPlatform == "win") ? "windows" :
+                // Map linux-{ musl,bionic,etc.} to linux
+                _targetPlatform.StartsWith("linux-") ? "linux" :
+                _targetPlatform;
 
             // In .NET 5 Crossgen2 supported only the following host->target compilation scenarios:
             //      win-x64 -> win-x64
             //      linux-x64 -> linux-x64
             //      linux-musl-x64 -> linux-musl-x64
             isSupportedTarget = isSupportedTarget &&
-                targetOS != null &&
                 (!version5 || _targetRuntimeIdentifier == _hostRuntimeIdentifier) &&
                 GetCrossgen2ComponentsPaths(version5);
 
@@ -298,8 +294,20 @@ private bool GetCrossgenComponentsPaths()
                     }
                 }
             }
-            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux) || IsFreeBSD())
+            else if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))
+            {
+                // Only x64 supported for OSX
+                if (_targetArchitecture != Architecture.X64 || RuntimeInformation.OSArchitecture != Architecture.X64)
+                {
+                    return false;
+                }
+
+                _crossgenTool.ToolPath = Path.Combine(_crossgenTool.PackagePath, "tools", "crossgen");
+                _crossgenTool.ClrJitPath = Path.Combine(_crossgenTool.PackagePath, "runtimes", _targetRuntimeIdentifier, "native", "libclrjit.dylib");
+            }
+            else
             {
+                // Generic Unix, including Linux and FreeBSD
                 if (_targetArchitecture == Architecture.Arm || _targetArchitecture == Architecture.Arm64)
                 {
                     if (RuntimeInformation.OSArchitecture == _targetArchitecture)
@@ -324,22 +332,6 @@ private bool GetCrossgenComponentsPaths()
                     _crossgenTool.ClrJitPath = Path.Combine(_crossgenTool.PackagePath, "runtimes", _targetRuntimeIdentifier, "native", "libclrjit.so");
                 }
             }
-            else if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))
-            {
-                // Only x64 supported for OSX
-                if (_targetArchitecture != Architecture.X64 || RuntimeInformation.OSArchitecture != Architecture.X64)
-                {
-                    return false;
-                }
-
-                _crossgenTool.ToolPath = Path.Combine(_crossgenTool.PackagePath, "tools", "crossgen");
-                _crossgenTool.ClrJitPath = Path.Combine(_crossgenTool.PackagePath, "runtimes", _targetRuntimeIdentifier, "native", "libclrjit.dylib");
-            }
-            else
-            {
-                // Unknown platform
-                return false;
-            }
 
             return File.Exists(_crossgenTool.ToolPath) && File.Exists(_crossgenTool.ClrJitPath);
         }
@@ -353,11 +345,6 @@ private bool GetCrossgen2ComponentsPaths(bool version5)
                 toolFileName = "crossgen2.exe";
                 v5_clrJitFileNamePattern = "clrjit-{0}.dll";
             }
-            else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux) || IsFreeBSD())
-            {
-                toolFileName = "crossgen2";
-                v5_clrJitFileNamePattern = "libclrjit-{0}.so";
-            }
             else if (RuntimeInformation.IsOSPlatform(OSPlatform.OSX))
             {
                 toolFileName = "crossgen2";
@@ -365,8 +352,9 @@ private bool GetCrossgen2ComponentsPaths(bool version5)
             }
             else
             {
-                // Unknown platform
-                return false;
+                // Generic Unix, including Linux and FreeBSD
+                toolFileName = "crossgen2";
+                v5_clrJitFileNamePattern = "libclrjit-{0}.so";
             }
 
             if (version5)
@@ -402,17 +390,5 @@ private static string ArchitectureToString(Architecture architecture)
                 _ => null
             };
         }
-
-#if NETCOREAPP
-        private static bool IsFreeBSD() => RuntimeInformation.IsOSPlatform(OSPlatform.FreeBSD);
-#else
-        private static readonly OSPlatform s_freebsdOSPlatform = OSPlatform.Create("FREEBSD");
-
-        private static bool IsFreeBSD()
-        {
-            return RuntimeInformation.IsOSPlatform(s_freebsdOSPlatform);
-        }
-#endif
-
     }
 }

From 2d6f89e33674b7c381cd6c59c8b642bf81d7d888 Mon Sep 17 00:00:00 2001
From: Jan Kotas <jkotas@microsoft.com>
Date: Fri, 2 Jun 2023 09:37:27 -0700
Subject: [PATCH 3/3] Use ordinal string comparison

---
 src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs b/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
index 575e94eef0e83..ced9becf153a7 100644
--- a/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
+++ b/src/tasks/Crossgen2Tasks/ResolveReadyToRunCompilers.cs
@@ -147,7 +147,7 @@ private bool ValidateCrossgen2Support()
             // Normalize target OS for crossgen invocation
             string targetOS = (_targetPlatform == "win") ? "windows" :
                 // Map linux-{ musl,bionic,etc.} to linux
-                _targetPlatform.StartsWith("linux-") ? "linux" :
+                _targetPlatform.StartsWith("linux-", StringComparison.Ordinal) ? "linux" :
                 _targetPlatform;
 
             // In .NET 5 Crossgen2 supported only the following host->target compilation scenarios:
